<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>YouTube DJ Player with Balance Control</title>
    <style>
        /* General styles */
        body {
            font-family: 'Helvetica Neue', Arial, sans-serif;
            display: flex;
            flex-direction: column;
            align-items: center;
            margin: 0;
            background: linear-gradient(135deg, #2c3e50, #bdc3c7);
            color: white;
            padding: 20px;
            box-sizing: border-box;
        }

        h1 {
            text-align: center;
            margin-bottom: 15px;
            color: #ECF0F1;
            text-shadow: 2px 2px 10px rgba(0, 0, 0, 0.7);
            font-size: 24px;
        }

        .track-control-container {
            display: flex;
            justify-content: space-around;
            width: 100%;
            max-width: 600px;
            margin: 20px 0;
        }

        .track-selector {
            margin-right: 10px;
            flex: 1;
        }

        label, input, select, button {
            display: block;
            margin-top: 10px;
            width: 100%;
            padding: 10px;
            font-size: 16px;
            border-radius: 5px;
            border: none;
            background-color: #34495e;
            color: white;
        }

        button {
            cursor: pointer;
            background-color: #2980b9;
            transition: background-color 0.3s;
        }

        button:hover {
            background-color: #3498db;
        }

        .player-container {
            display: flex;
            justify-content: space-between;
            width: 100%;
            margin: 20px 0;
        }

        .video-player {
            flex: 1;
            margin: 0 10px;
            border: 2px solid #2c3e50;
            border-radius: 10px;
            overflow: hidden;
        }

        .balance-control {
            display: flex;
            align-items: center;
            justify-content: space-between;
            margin-top: 20px;
            width: 100%;
            max-width: 600px;
        }

        .balance-slider {
            width: 80%;
        }

        @media (max-width: 600px) {
            .player-container {
                flex-direction: column;
                align-items: center;
            }

            .video-player {
                width: 100%;
                margin: 10px 0;
            }
        }
    </style>
</head>
<body>
    <h1>YouTube DJ Player with Balance Control</h1>
    
    <div class="track-control-container">
        <div class="track-selector">
            <label for="search-deck1">Search DECK-1:</label>
            <input type="text" id="search-deck1" placeholder="Search YouTube">
            <button onclick="searchYouTubeForDeck('deck1')">Search</button>
            <select id="track-list1"></select>
        </div>

        <div class="track-selector">
            <label for="search-deck2">Search DECK-2:</label>
            <input type="text" id="search-deck2" placeholder="Search YouTube">
            <button onclick="searchYouTubeForDeck('deck2')">Search</button>
            <select id="track-list2"></select>
        </div>
    </div>

    <div class="player-container">
        <div class="video-player" id="player1">
            <iframe id="youtube-player1" width="100%" height="315" src="https://www.youtube.com/embed?enablejsapi=1" frameborder="0" allowfullscreen></iframe>
        </div>
        <div class="video-player" id="player2">
            <iframe id="youtube-player2" width="100%" height="315" src="https://www.youtube.com/embed?enablejsapi=1" frameborder="0" allowfullscreen></iframe>
        </div>
    </div>

    <div class="balance-control">
        <label for="balance-slider">Balance Control (Left ? Right):</label>
        <input type="range" id="balance-slider" class="balance-slider" min="0" max="100" value="50">
    </div>

    <script>
        const apiKey = 'AIzaSyDjTV_vmRsN6bWbW2gyusMHMW_gZtpLI1A'; // Replace with your YouTube Data API key.

        let player1, player2;

        // Load YouTube API script
        function loadYouTubeAPI() {
            const script = document.createElement('script');
            script.src = "https://www.youtube.com/iframe_api";
            document.body.appendChild(script);
        }

        // Initialize YouTube players
        function onYouTubeIframeAPIReady() {
            player1 = new YT.Player('youtube-player1', {
                events: {
                    'onReady': () => player1.setVolume(50)
                }
            });
            player2 = new YT.Player('youtube-player2', {
                events: {
                    'onReady': () => player2.setVolume(50)
                }
            });
        }

        // Function to search YouTube and populate the respective dropdown
        function searchYouTubeForDeck(deck) {
            const query = document.getElementById(`search-${deck}`).value;
            if (query.trim() === '') {
                alert('Please enter a search term.');
                return;
            }

            const url = `https://www.googleapis.com/youtube/v3/search?part=snippet&type=video&q=${encodeURIComponent(query)}&maxResults=10&key=${apiKey}`;

            fetch(url)
                .then(response => response.json())
                .then(data => {
                    const trackList = document.getElementById(`track-list${deck === 'deck1' ? 1 : 2}`);
                    trackList.innerHTML = ''; // Clear previous results

                    data.items.forEach(video => {
                        const option = document.createElement('option');
                        option.value = video.id.videoId;
                        option.textContent = video.snippet.title;
                        trackList.appendChild(option);
                    });

                    // Select the first track and trigger the change event
                    if (trackList.options.length > 0) {
                        trackList.selectedIndex = 0;
                        trackList.dispatchEvent(new Event('change'));
                    }
                })
                .catch(error => console.error('Error fetching data:', error));
        }

        // Function to load selected video into the player
        function loadSelectedTrack(player, trackListId) {
            const selectedVideoId = document.getElementById(trackListId).value;
            if (selectedVideoId) {
                player.loadVideoById(selectedVideoId);
            }
        }

        // Initialize balance control
        function initBalanceControl() {
            const balanceSlider = document.getElementById('balance-slider');

            balanceSlider.addEventListener('input', () => {
                const balance = balanceSlider.value;
                if (player1 && player2) {
                    player1.setVolume(100 - balance); // Left player volume decreases as slider moves right
                    player2.setVolume(balance);      // Right player volume increases as slider moves right
                }
            });
        }

        // Event listeners for loading selected videos into players
        document.getElementById('track-list1').addEventListener('change', () => {
            loadSelectedTrack(player1, 'track-list1');
        });

        document.getElementById('track-list2').addEventListener('change', () => {
            loadSelectedTrack(player2, 'track-list2');
        });

        // Load the YouTube API script and initialize balance control on page load
        window.onload = () => {
            loadYouTubeAPI();
            initBalanceControl();
        };
    </script>
</body>
</html>
